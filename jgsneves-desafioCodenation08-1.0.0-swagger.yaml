swagger: '2.0'
info:
  description: |
    Documentação da API do Desafio 08 do Aceleradev Codenation
    [http://swagger.io](http://swagger.io) or on 
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: 1.0.0
  title: Desafio Codenation 08
  termsOfService: http://swagger.io/terms/
  contact:
    email: jgsn.adv@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v2
tags:
- name: User
  description: Informações sobre os usuários da API.
  externalDocs:
    description: Saiba mais sobre
    url: http://swagger.io
- name: Group
  description: Grupos de usuários
- name: Agent
  description: Agentes de usuários
  externalDocs:
    description: Saiba mais sobre
    url: http://swagger.io
- name: Event
  description: Eventos organizados por agentes
  externalDocs:
    description: Saiba mais sobre
    url: http://swagger.io
# schemes:
# - http
paths:
  /users:
      post:
        tags:
        - User
        summary: Adiciona um novo usuário
        operationId: addUser
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - in: body
          name: body
          description: Objeto do usuário que será criado
          required: true
          schema:
            $ref: '#/definitions/User'
        responses:
          200:
            description: Usuário criado
            schema:
              $ref: '#/definitions/User'
          405:
            description: Entrada inválida
        security:
        - petstore_auth:
          - write:pets
          - read:pets
      get:
        tags:
        - User
        summary: Retorna todos os usuários
        description: Utilize Query Params para filtrar os usuários
        operationId: getUsers
        produces: 
        - application/json
        responses:
          200:
            description: Retorna lista de usuários
            
  /users/{userId}:
    put:
      tags:
      - User
      summary: Ache um usuário por ID
      description: Retorna um único usuário
      operationId: putUserById
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: ID do usuário como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Usuário modificado
          schema:
            $ref: '#/definitions/User'
        400:
          description: ID inválido
        404:
          description: Usuário não encontrado
      security:
      - api_key: []
    
    delete:
      tags:
      - User
      summary: Deleta um usuário
      operationId: deleteUser
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: ID do usuário como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Usuário deletado com sucesso
        400:
          description: Id inválido
        404:
          description: Usuário não encontrado
      security:
      - petstore_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - User
      summary: Retorna um usuário
      operationId: getUserById
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: ID do usuário como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Usuário encontrado com sucesso
        400:
          description: Id inválido
        404:
          description: Usuário não encontrado

  /groups:
    post:
      tags:
      - Group
      summary: Adiciona um novo Grupo
      operationId: addGroup
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Objeto do grupo que será criado
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        200:
          description: Grupo Criado
          schema:
            $ref: '#/definitions/Group'
        405:
          description: Entrada inválida
      security:
      - petstore_auth:
        - write:pets
        - read:pets
    get:
      tags:
      - Group
      summary: Retorna todos os grupos
      description: Utilize Query Params para filtrar os grupos
      operationId: getGroups
      produces: 
      - application/json
      responses:
        200:
          description: Retorna lista de grupos
            

  /groups/{groupId}:
    put:
      tags:
      - Group
      summary: Ache um grupo por ID
      description: Retorna um único grupo
      operationId: putGroupById
      produces:
      - application/json
      parameters:
      - name: groupId
        in: path
        description: ID do grupo como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Grupo modificado
          schema:
            $ref: '#/definitions/Group'
        400:
          description: ID inválido
        404:
          description: Grupo não encontrado
      security:
      - api_key: []
    
    delete:
      tags:
      - Group
      summary: Deleta um grupo
      operationId: deleteGroup
      produces:
      - application/json
      parameters:
      - name: groupId
        in: path
        description: ID do grupo como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Grupo delatado com sucesso
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: Id inválido
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: Grupo não encontrado
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - petstore_auth:
        - write:pets
        - read:pets
        
    get:
      tags:
      - Group
      summary: Retorna um grupo
      operationId: getGroupById
      produces:
      - application/json
      parameters:
      - name: groupId
        in: path
        description: ID do grupo como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Grupo encontrado com sucesso
        400:
          description: Id inválido
        404:
          description: Grupo não encontrado


        
        
  /agents:
      post:
        tags:
        - Agent
        summary: Adiciona um novo agente
        operationId: addAgent
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - in: body
          name: body
          description: Objeto do agente que será criado
          required: true
          schema:
            $ref: '#/definitions/Agent'
        responses:
          200:
            description: Agente criado
            schema:
              $ref: '#/definitions/Agent'
          405:
            description: Entrada inválida
            schema:
              $ref: '#/definitions/ApiResponse'
        security:
        - petstore_auth:
          - write:pets
          - read:pets
      get:
        tags:
        - Agent
        summary: Retorna todos os agentes
        description: Utilize Query Params para filtrar os agentes
        operationId: getAgents
        produces: 
        - application/json
        responses:
          200:
            description: Retorna lista de agentes

  /agents/{agentId}:
    put:
      tags:
      - Agent
      summary: Ache um agente por ID
      description: Retorna um único agente
      operationId: putAgentById
      produces:
      - application/json
      parameters:
      - name: agentId
        in: path
        description: ID do agente como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Agente modificado
          schema:
            $ref: '#/definitions/Agent'
        400:
          description: ID inválido
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: Agente não encontrado
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - api_key: []
    
    delete:
      tags:
      - Agent
      summary: Deleta um agente
      operationId: deleteAgent
      produces:
      - application/json
      parameters:
      - name: agentId
        in: path
        description: ID do agente como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Agente delatado com sucesso
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: Id inválido
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: Agente não encontrado
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - petstore_auth:
        - write:pets
        - read:pets
        
    get:
      tags:
      - Agent
      summary: Retorna um agente
      operationId: getAgentById
      produces:
      - application/json
      parameters:
      - name: agentId
        in: path
        description: ID do agente como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Agente encontrado com sucesso
        400:
          description: Id inválido
        404:
          description: Agente não encontrado

  /events:
      post:
        tags:
        - Event
        summary: Adiciona um novo evento
        operationId: addEvent
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - in: body
          name: body
          description: Objeto do evento que será criado
          required: true
          schema:
            $ref: '#/definitions/Event'
        responses:
          200:
            description: Evento criado
            schema:
              $ref: '#/definitions/Event'
          405:
            description: Entrada inválida
            schema:
              $ref: '#/definitions/ApiResponse'
        security:
        - petstore_auth:
          - write:pets
          - read:pets
      get:
        tags:
        - Event
        summary: Retorna todos os eventos
        description: Utilize Query Params para filtrar os eventos
        operationId: getEvents
        produces: 
        - application/json
        responses:
          200:
            description: Retorna lista de Eventos
            schema:
              $ref: '#/definitions/ApiResponse'

  /events/{eventId}:
    put:
      tags:
      - Event
      summary: Ache um evento por ID
      description: Retorna um único evento
      operationId: putEventById
      produces:
      - application/json
      parameters:
      - name: eventId
        in: path
        description: ID do evento como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Evento modificado
          schema:
            $ref: '#/definitions/Event'
        400:
          description: ID inválido
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: Evento não encontrado
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - api_key: []
    
    delete:
      tags:
      - Event
      summary: Deleta um Evento
      operationId: deleteEVent
      produces:
      - application/json
      parameters:
      - name: eventId
        in: path
        description: ID do agente como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Evento delatado com sucesso
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: Id inválido
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: Evento não encontrado
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - petstore_auth:
        - write:pets
        - read:pets
        
    get:
      tags:
      - Event
      summary: Retorna um evento
      operationId: getEventById
      produces:
      - application/json
      parameters:
      - name: eventId
        in: path
        description: ID do evento como Path Param
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Evento encontrado com sucesso
        400:
          description: Id inválido
        404:
          description: Evento não encontrado



securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Event:
    type: object
    properties:
      id:
        type: integer
        format: int64
      level:
        type: string
      payload:
        type: string
      shelve:
        type: boolean
      date:
        type: string
        format: date-time
      agentId:
        type: integer
        format: int32
    xml:
      name: Event
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Agent:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      status:
        type: boolean
      environment:
        type: string
      version:
        type: string
      address:
        type: string
      userId:
        type: integer
        format: int64
    xml:
      name: Agent
  Group:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Grupo 01
    xml:
      name: Group
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /jgsneves/desafioCodenation08/1.0.0
schemes:
 - https
 - http